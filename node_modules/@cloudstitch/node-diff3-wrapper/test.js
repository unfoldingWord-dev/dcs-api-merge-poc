var which = require("which");
var childProcess = require("child_process");
var path = require("path");

var diff3Path = which.sync("diff3");

var origPath = path.join(process.cwd(), "orig");
var aPath = path.join(process.cwd(), "a");

var b = `This has to be more
is
a
file
`;

function cleanUpDiff(file) {
  let splitFile = file.split("\n");
  let result = [];
  let skip = false;
  for(let line of splitFile) {
    if(/\|{7}/.exec(line)) {
      skip = true;
    } else if(/={7}/.exec(line)) {
      skip = false;
      result.push("=".repeat(8));
    } else if(/<{7}/.exec(line)) {
      result.push("<".repeat(8));
    } else if(/>{7}/.exec(line)) {
      result.push(">".repeat(8));
    } else if(!skip) {
      result.push(line);
    }
  }
  return result.join("\n");
}

// var params = ["-m", aPath, origPath,  "-"]

// console.log(`calling: ${diff3Path} ${params.join(" ")}`)

// var diff = childProcess.spawn(diff3Path, params);

// var stdout = "";
// diff.stdout.on("data", (data) => {
//   stdout = stdout + data.toString();
// });

// diff.on("close", () => {
//   console.log(cleanUpDiff(stdout));
// })

// diff.stdin.write(b);
// diff.stdin.end();

var Diff3 = require("./").Diff3;
Diff3.diffM(aPath, origPath, "-", b).then((diff) => {
  console.log(cleanUpDiff(diff));
}, console.log);


